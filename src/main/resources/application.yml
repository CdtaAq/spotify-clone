server:
  port: 8080

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/spotifydb
    username: spotify
    password: spotify
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

app:
  jwt:
    secret: ${JWT_SECRET:replace_this_with_a_strong_secret}
    access-token-expires-minutes: ${ACCESS_EXPIRES_MINUTES:15}
    refresh-token-expires-days: ${REFRESH_EXPIRES_DAYS:30}
  oauth2:
    authorized-redirect-uri: http://localhost:3000/oauth2/redirect

# OAuth2 client config placeholders - replace with real client ids/secrets or use env variables
spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:}
            client-secret: ${GOOGLE_CLIENT_SECRET:}
            scope:
              - openid
              - profile
              - email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-name: Google
          github:
            client-id: ${GITHUB_CLIENT_ID:}
            client-secret: ${GITHUB_CLIENT_SECRET:}
            scope:
              - user:email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-name: GitHub
        provider:
          github:
            authorization-uri: https://github.com/login/oauth/authorize
            token-uri: https://github.com/login/oauth/access_token
            user-info-uri: https://api.github.com/user
